import structures.classes.players.*;
import structures.classes.Surface;
import structures.classes.*;
import structures.enums.*;

import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Program {
        public static void main(String[] args) {
                List<List<Surface>> maze = generateMaze();
                World world = new World(maze, Player.getPlayerType(PlayerType.WALKER, maze.get(33).get(2)), new Time(), new Sky());
                try {
                        final Scanner scanner = new Scanner(System.in);
                        while (true) {
                                final String nextMovementText = Colors.GREEN_BG + "Insert next movement: [w] [a] [s] [d] [q] [e] [z] [c] " + Colors.RESET + "    " + "\n" + "    " + Colors.CYAN_BG;
                                String selection = "";

                                world.printWorld();

                                if (world.getPlayer() instanceof Walker)
                                        System.out.println(nextMovementText + "(b:boat) (f:carpet) (h:horse) (x:exit)" + Colors.RESET + " ");
                                else if (world.getPlayer() instanceof Boat)
                                        System.out.println(nextMovementText + "(l:walk) (f:carpet) (h:horse) (x:exit)" + Colors.RESET + " ");
                                else if (world.getPlayer() instanceof Horse)
                                        System.out.println(nextMovementText + "(l:walk) (f:carpet) (b:boat) (x:exit)" + Colors.RESET + " ");
                                else if (world.getPlayer() instanceof Carpet)
                                        System.out.println(nextMovementText + "(l:walk) (h:horse) (b:boat) (x:exit)" + Colors.RESET + " ");
                                else
                                        System.exit(1);

                                System.out.println();
                                selection = scanner.nextLine();

                                if (selection.equals("w") || selection.equals("a") || selection.equals("s") || selection.equals("d") || selection.equals("q") || selection.equals("e") || selection.equals("z") || selection.equals("c")) {
                                        world.updateState(selection, 1);
                                } else if (selection.equals("b") || selection.equals("f") || selection.equals("h") || selection.equals("l")) {
                                        world.updateState(selection);
                                } else if (selection.equals("x")) {
                                        System.exit(0);
                                } else {
                                        System.out.println(Colors.RED_BG + Colors.BLACK + "WRONG INPUT" + Colors.RESET + "\n");
                                }
                        }
                } catch (InputMismatchException exception) {
                        System.out.println(Colors.RED_BG + Colors.BLACK + exception.getMessage() + Colors.RESET);
                }
        }

        /**
         * 0 -> Ground, 1 -> LowGrass, 2 -> MidGrass, 3 -> HighGrass, 4 -> Sand, 5 ->
         * Mountain, 6 -> Wall, 7 -> Water, 8 -> TroubledWaters
         * 
         * @return
         */
        public static List<List<Surface>> generateMaze() {
                final int[][] mazeTemplate = {
                        {6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6},
                        {6,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,6},
                        {6,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,6},
                        {6,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,6},
                        {6,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,6},
                        {6,2,2,2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,6},
                        {6,2,2,2,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,4,7,7,7,7,7,7,6,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,1,1,1,1,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,6},
                        {6,2,2,2,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,4,7,7,7,7,7,7,6,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,0,0,0,0,6},
                        {6,2,2,2,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,4,7,7,7,7,7,7,6,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,0,0,0,0,6},
                        {6,2,2,2,6,6,6,6,6,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,7,7,7,7,7,7,6,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,0,0,0,0,6},
                        {6,2,2,2,2,2,2,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,7,7,7,7,7,7,6,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,0,0,0,0,6},
                        {6,2,2,2,2,2,2,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,7,7,7,7,7,7,6,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,0,0,0,0,6},
                        {6,2,2,2,2,2,2,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,7,7,7,7,7,7,6,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,6},
                        {6,2,2,2,2,2,2,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,4,4,1,1,1,6,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6},
                        {6,6,6,6,6,6,6,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,1,1,1,6,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6},
                        {6,0,0,0,0,0,6,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,1,1,1,6,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6},
                        {6,0,0,0,0,0,6,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,1,1,1,6,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6},
                        {6,0,0,0,0,0,6,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,1,1,1,6,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6},
                        {6,0,0,0,0,0,6,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,1,1,1,6,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,1,1,1,6,0,0,0,6,0,0,0,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,1,1,1,6,0,0,0,6,0,0,0,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,6,0,0,0,6,0,0,0,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,6,0,0,0,6,0,0,0,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,6,0,0,0,6,0,0,0,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,6,0,0,0,6,0,0,0,6,6,6,6,6,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,6,0,0,0,6,0,0,0,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,6,0,0,0,6,0,0,0,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,6,0,0,0,6,0,0,0,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,6,0,0,0,6,0,0,0,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,1,1,6,1,1,1,1,6,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,6,0,0,0,6,0,0,0,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,0,0,6,1,1,6,6,6,6,6,6,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,6,0,0,0,6,0,0,0,6,6,6,6,6,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,6,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,6,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,6,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,6,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,6,0,0,0,6,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6},
                        {6,0,0,0,0,0,6,0,0,6,1,1,1,1,1,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,1,1,1,1,1,1,1,1,6,0,0,0,0,6,0,0,0,0,0,0,0,0,0,6},
                        {6,0,0,0,0,0,6,0,0,6,1,1,1,1,1,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,1,1,1,1,1,1,1,1,6,0,0,0,0,6,0,0,0,0,0,0,0,0,0,6},
                        {6,0,0,0,0,0,6,0,0,6,1,1,1,1,1,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,1,1,1,1,1,1,1,1,6,0,0,0,0,6,0,0,0,0,0,0,0,0,0,6},
                        {6,0,0,0,0,0,6,0,0,6,1,1,1,1,1,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,1,1,1,1,1,1,1,1,6,0,0,0,0,6,0,0,0,0,0,0,0,0,0,6},
                        {6,0,0,0,0,0,6,0,0,6,1,1,1,1,1,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,1,1,1,1,1,1,1,1,6,0,0,0,0,6,0,0,0,0,0,0,0,0,0,6},
                        {6,0,0,0,0,0,6,0,0,6,1,1,1,1,1,1,1,1,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,4,4,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,6,6,6,6,6,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,0,0,6,6,6,6,6,6,6,6,6,6,1,1,1,1,4,4,4,4,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,6,1,1,1,1,1,1,4,4,4,4,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,6,1,1,1,1,1,1,4,4,4,4,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,4,4,4,4,4,4,4,4,4,1,1,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,6,1,1,1,1,1,1,4,4,4,4,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,4,4,4,4,4,4,4,4,4,1,1,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,1,1,1,1,1,1,4,4,4,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,4,4,4,4,4,4,4,4,4,1,1,6,6,6,6,6,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,1,1,1,1,1,4,4,4,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,1,1,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,1,1,1,1,1,4,4,4,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,1,1,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,1,1,1,1,1,4,4,4,4,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,1,1,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,1,1,1,1,1,4,4,4,4,7,7,6,0,0,0,0,5,5,5,5,5,5,5,5,5,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,1,1,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,1,1,1,6,6,6,6,6,7,7,7,7,6,0,0,0,0,5,5,5,5,5,5,5,5,5,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,1,1,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,6,1,1,1,6,0,0,4,4,7,7,7,7,6,0,0,0,0,5,5,5,5,5,5,5,5,5,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,1,1,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,6,1,1,1,6,0,0,4,4,7,7,7,7,6,0,0,0,0,5,5,5,5,5,5,5,5,5,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,1,1,6,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,6,6,6,6,6,0,0,6,6,7,7,7,7,6,0,0,0,0,5,5,5,5,5,5,5,5,5,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,1,1,6,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,6,6,6,6,6,6,6,0,0,0,0,5,5,5,5,5,5,5,5,5,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,4,1,1,6,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,1,6,0,0,0,0,6,0,0,0,0,6,0,0,0,0,6},
                        {6,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6},
                        {6,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6},
                        {6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6},
                        {6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6},
                        {6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6},
                        {6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6},
                        {6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6}
                };

                return IntStream.range(0, mazeTemplate.length).mapToObj(y -> {
                        return IntStream.range(0, mazeTemplate[y].length).mapToObj(x -> {
                                return new Surface(SurfaceType.values()[mazeTemplate[y][x]], new Position(x, y));
                        }).collect(Collectors.toList());
                }).collect(Collectors.toList());
        }
}
